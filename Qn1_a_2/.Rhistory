right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)),
zoom = 12, type = "terrain")
# Load necessary libraries
library(sf)        # For spatial operations
library(dplyr)     # For data manipulation
library(ggplot2)   # For visualization
library(ggspatial) # For accessing map tiles
install.packages("ggspatial")
# Load necessary libraries
library(sf)        # For spatial operations
library(dplyr)     # For data manipulation
library(ggplot2)   # For visualization
library(ggspatial) # For accessing map tiles
# Convert region_data to sf object
region_sf <- st_as_sf(region_data)
# Read the tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree_data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get map tiles from Stadia Maps with terrain background
map <- get_stadia_map(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude),
right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)),
zoom = 12, layer = "terrain")
# Load necessary libraries
library(ggplot2)
library(ggmap)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Get OpenStreetMap base map
map_osm <- get_stamenmap(bbox, zoom = 13, maptype = "toner-background")
# Load necessary libraries
library(ggplot2)
library(ggmap)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Get OpenStreetMap base map
map_osm <- get_stadiamap(bbox, zoom = 13, maptype = "toner-background")
# Load necessary libraries
library(ggplot2)
library(ggmap)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Get OpenStreetMap base map
map_osm <- get_stadia_map(bbox, zoom = 13, maptype = "toner-background")
# Load necessary libraries
library(ggplot2)
library(ggmap)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Get OpenStreetMap base map
map_osm <- get_stadiamap(bbox, zoom = 13, maptype = "toner-background")
# Load necessary libraries
library(ggplot2)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Create dot density map
map_plot <- ggplot() +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude), color = "green", alpha = 0.5, size = 0.5) + # Add tree points
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot)
tree_sf
# Load necessary libraries
library(ggplot2)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Split the 'geolocation' column by comma
coordinates <- strsplit(as.character(tree_sf$geolocation), ",")
# Extract latitude and longitude
latitude <- as.numeric(sapply(coordinates, function(x) as.numeric(x[1])))
longitude <- as.numeric(sapply(coordinates, function(x) as.numeric(x[2])))
# Add latitude and longitude to the dataframe
tree_sf$Latitude <- latitude
tree_sf$Longitude <- longitude
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Create dot density map
map_plot <- ggplot() +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude), color = "green", alpha = 0.5, size = 0.5) + # Add tree points
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot)
# Load necessary libraries
library(ggplot2)
library(sf)
# Read tree data
tree_data <- read.csv("ext_cln_tree_data.csv")
# Convert tree data to sf object
tree_sf <- st_as_sf(tree_data, coords = c("Longitude", "Latitude"), crs = 4326)
# Split the 'geolocation' column by comma
coordinates <- strsplit(as.character(tree_sf$geolocation), ",")
# Extract latitude and longitude
latitude <- as.numeric(sapply(coordinates, function(x) as.numeric(x[1])))
longitude <- as.numeric(sapply(coordinates, function(x) as.numeric(x[2])))
# Add latitude and longitude to the dataframe
tree_sf$Latitude <- latitude
tree_sf$Longitude <- longitude
# Get bounding box for the map
bbox <- st_bbox(tree_sf)
# Create dot density map
map_plot <- ggplot() +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "toner-background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stamenmap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "toner-background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "toner-background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_toner_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = Located.in), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_toner_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_toner_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "black", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_toner_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "grey", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_toner_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 5, bottom = min(tree_sf$Latitude) + 5, right = max(tree_sf$Longitude) + 5, top = max(tree_sf$Latitude)) - 5, zoom = 13, maptype = "stamen_terrain_background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 5, bottom = min(tree_sf$Latitude) + 5, right = max(tree_sf$Longitude) + 5, top = max(tree_sf$Latitude)) - 5, zoom = 10, maptype = "stamen_terrain_background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 10, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 0.5, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 1, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude), bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 1, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.01, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude)), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.01, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude) - 0.01), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.01, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude) + 0.01), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.001, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude) + 0.001), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.005, bottom = min(tree_sf$Latitude), right = max(tree_sf$Longitude), top = max(tree_sf$Latitude) + 0.005), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.005, bottom = min(tree_sf$Latitude) - 0.005, right = max(tree_sf$Longitude) + 0.005, top = max(tree_sf$Latitude) + 0.005), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 15, maptype = "stamen_terrain_background")
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
# Create dot density map with background map
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, fill = "transparent", color = "red", size = 2, inherit.aes = FALSE) + # Add region boundaries
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen")) + # Define colors for 'Located.in' categories
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude")
# Display the map
print(map_plot_back)
region_data
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill") + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_viridis_c(alpha = 0.3, name = "Region") + # Adjust fill color saturation and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_viridis_c(alpha = 0.3, name = "Region") + # Adjust fill color saturation and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region", alpha = 0.5) + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region", alpha = 0.5) + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.5, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.25, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.35, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "lightgreen", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.35, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "yellow", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.5, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "yellow", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"))
# Display the map
print(map_plot_back)
library(ggmap)
library(viridis)
# Get the background map of Melbourne City
melbourne_map <- get_stadiamap(bbox = c(left = min(tree_sf$Longitude) - 0.003, bottom = min(tree_sf$Latitude) - 0.003, right = max(tree_sf$Longitude) + 0.003, top = max(tree_sf$Latitude) + 0.003), zoom = 13, maptype = "stamen_terrain_background")
map_plot_back <- ggmap(melbourne_map) +
geom_sf(data = region_data, aes(fill = featurenam), color = "red", size = 2, show.legend = "fill", alpha = 0.5, inherit.aes = FALSE) + # Add region boundaries and lightly color each region
geom_point(data = tree_sf, aes(x = Longitude, y = Latitude, color = `Located.in`), alpha = 0.5, size = 0.5) + # Add tree points with conditional coloring
scale_fill_manual(values = viridis_pal()(n_distinct(region_data$featurenam)), name = "Region") + # Define discrete color scale for regions and add legend title
scale_color_manual(values = c("Street" = "yellow", "Park" = "darkgreen"), name = "Tree Location") + # Define colors for 'Located.in' categories and add legend title
labs(title = "Tree Dot Density Map", x = "Longitude", y = "Latitude") +
guides(fill = guide_legend(title = "Region"),
color = guide_legend(title = "Tree Location",
override.aes = list(size = 4)))
# Display the map
print(map_plot_back)
# Save the plot to a file with larger dimensions
ggsave("vis_3.png", map_plot_back, width = 12, height = 14, units = "in")
# Save the plot to a file with larger dimensions
ggsave("vis_3.png", map_plot_back, width = 12, height = 12, units = "in")
# Save the plot to a file with larger dimensions
ggsave("vis_3.png", map_plot_back, width = 15, height = 15, units = "in")
